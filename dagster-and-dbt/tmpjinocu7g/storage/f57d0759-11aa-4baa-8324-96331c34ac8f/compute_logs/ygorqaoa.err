[32m2024-10-07 10:55:04 +0200[0m - dagster - [34mDEBUG[0m - __ASSET_JOB_0 - f57d0759-11aa-4baa-8324-96331c34ac8f - 89575 - LOGS_CAPTURED - Started capturing logs in process (pid: 89575).
[32m2024-10-07 10:55:04 +0200[0m - dagster - [34mDEBUG[0m - __ASSET_JOB_0 - f57d0759-11aa-4baa-8324-96331c34ac8f - 89575 - adhoc_request - STEP_START - Started execution of step "adhoc_request".
[32m2024-10-07 10:55:04 +0200[0m - dagster - [34mERROR[0m - [31m__ASSET_JOB_0 - f57d0759-11aa-4baa-8324-96331c34ac8f - 89575 - adhoc_request - STEP_FAILURE - Execution of step "adhoc_request" failed.

dagster._core.errors.DagsterExecutionStepExecutionError: Error occurred while executing op "adhoc_request"::

duckdb.duckdb.ConversionException: Conversion Error: timestamp field value out of range: "", expected format is (YYYY-MM-DD HH:MM:SS[.US][Â±HH:MM| ZONE])
LINE 17:         where pickup_datetime >= ''
                                          ^

Stack Trace:
  File "/home/me/dagster_dbt_tutorial/dagster_dbt_tut_env/lib/python3.12/site-packages/dagster/_core/execution/plan/utils.py", line 54, in op_execution_error_boundary
    yield
  File "/home/me/dagster_dbt_tutorial/dagster_dbt_tut_env/lib/python3.12/site-packages/dagster/_utils/__init__.py", line 473, in iterate_with_context
    next_output = next(iterator)
                  ^^^^^^^^^^^^^^
  File "/home/me/dagster_dbt_tutorial/dagster_dbt_tut_env/lib/python3.12/site-packages/dagster/_core/execution/plan/compute_generator.py", line 141, in _coerce_op_compute_fn_to_iterator
    result = invoke_compute_fn(
             ^^^^^^^^^^^^^^^^^^
  File "/home/me/dagster_dbt_tutorial/dagster_dbt_tut_env/lib/python3.12/site-packages/dagster/_core/execution/plan/compute_generator.py", line 129, in invoke_compute_fn
    return fn(context, **args_to_pass) if context_arg_provided else fn(**args_to_pass)
                                                                    ^^^^^^^^^^^^^^^^^^
  File "/home/me/dagster_dbt_tutorial/dagster-and-dbt/dagster_university/assets/requests.py", line 62, in adhoc_request
    results = conn.execute(query).fetch_df()
              ^^^^^^^^^^^^^^^^^^^
[0m
